#! /bin/bash

testingDirectory=/home/ssdavis/40/p1/P1testing
if [ $# -ne 1 ]; then
  echo "testhw usage: testhw simulator_src_directory"
  exit
fi

cd $1
rm -f *.out *.o out*.txt &> /dev/null
rm -f *Results.txt &> /dev/null

echo -n "Scores from p1 for " > finalResults.txt

if [ -e authors.txt ]; then
  dos2unix authors.txt
  awk {'for (i = 2; i <= NF; ++i) printf"%s ", $i'} authors.txt >> finalResults.txt
  echo -e "\n"
  awk 'NR < 3 {for (i = 2; i <= NF; ++i) printf"%s", $i; printf"\n";}' authors.txt > names.txt
  awk {'printf"%s ", $1'} authors.txt > addresses
else
  echo  "You need to create an authors.txt file!!!! No one will receive credit for this assignment"  >> finalResults.txt
  echo "$1@ucdavis.edu" > addresses
  finger ${PWD##*/} | awk 'NR == 1 {printf"%s,%s", $5, $4}' > names.txt
fi


echo -en "\nAddresses used: " >> finalResults.txt 

cat addresses >> finalResults.txt
echo " " >> finalResults.txt

warningScore=0
styleScore=0
designScore=0
constErrors=0
operationsScore=0 

make &> makeOutput

if [ -e simulator.out ]; then
  grep warning makeOutput >& warningResults.txt
  warningScore=$(cat warningResults.txt | wc -l)
  operationsScore=$( $testingDirectory/p1Tester.sh $PWD)
fi

/home/ssdavis/40/cppChecker.sh $PWD | awk '/Processing/,/Violated File Details/' > styleResults.txt
designErrors=$( $testingDirectory/p1DesignChecker.sh $PWD )
constErrors=$( $testingDirectory/p1ConstChecker.sh $PWD )
styleScore=$( awk '/Total Errors Occurs/ {printf"%d\n", 9 - $6}' styleResults.txt ) 

if [[ $styleScore -lt 0 ]]; then
  styleScore=0
fi

if [[ $warningScore -eq 0 ]]; then
  echo "No warnings." > warningResults.txt
fi

if [ ! -e designResults.txt ]; then
  echo "No design errors."  >> designResults.txt
  designScore=23
else
  designScore=$(( 23 - `cat designResults.txt | wc -l` ))
fi

if [[ $constErrors -eq 0 ]]; then
  echo "No const errors." >> constResults.txt
fi

constScore=$(( 7 - $constErrors ))

echo "Style: $styleScore out of 9" >> finalResults.txt
echo "Design: $designScore out of 23" >> finalResults.txt
echo "Const: $constScore out of 7" >> finalResults.txt
echo "Operation: $operationsScore out of 11" >> finalResults.txt
echo "Warnings (subtracted final score down to zero): $warningScore"  >> finalResults.txt

if [ $designErrors -gt 0 ]; then
  echo "You had fatal design errors listed in designResults.txt so you will receive a zero." >> finalResults.txt
  finalScore=0
else  # no fatal design errors
  if [ $operationsScore -eq 0 ]; then
    echo "Your program did not work so you will only receive points for design and consts." >> finalResults.txt
    finalScore=$(( $constScore + $designScore ))
  else  # works!
    finalScore=$(($styleScore + $constScore + $designScore + $operationsScore - $warningScore))
  fi  # if operation doesn't work
fi # if fatal design errors

if [ $finalScore -lt 0 ]; then
  finalScore=0
fi

echo "Total: $finalScore out of 50.">> finalResults.txt


#  mailx -s "ECS 40 P1 Test Results" -a designResults.txt -a styleResults.txt -a constResults.txt -a operationResults.txt -a warningResults.txt `cat addresses` < finalResults.txt
#  styleScore=0 

# awk 'NR == 1 {printf"%s,", $0}' names.txt >> ../results.csv
#echo " ${1%%/}, $finalScore,$constScore,$styleScore, $designScore, $operationsScore, $warningScore" >> ../results.csv
#authorCount=$(grep "@" authors.txt | wc -l)

#if [ $authorCount -gt 1 ]; then
#  awk 'NR == 2 {printf"%s,", $0}' names.txt >> ../results.csv
#  echo "${1%%/}, $finalScore,$constScore,$styleScore, $designScore, $operationsScore, $warningScore" >> ../results.csv
#fi

